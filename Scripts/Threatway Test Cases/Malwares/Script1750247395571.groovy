/************** Imports **************/
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject

import com.kms.katalon.core.model.FailureHandling
import com.kms.katalon.core.testobject.ConditionType
import com.kms.katalon.core.testobject.ObjectRepository as OR
import com.kms.katalon.core.testobject.TestObject
import com.kms.katalon.core.util.KeywordUtil
import com.kms.katalon.core.webui.common.WebUiCommonHelper
import com.kms.katalon.core.webui.driver.DriverFactory
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI

import org.openqa.selenium.WebDriver
import org.openqa.selenium.WebElement
import org.openqa.selenium.JavascriptExecutor
import org.openqa.selenium.Keys

import java.util.Random

/************** Yardımcılar **************/
TestObject X(String xp){ def to=new TestObject(xp); to.addProperty("xpath",ConditionType.EQUALS,xp); return to }

/** Elemanı görünür olana kadar küçük adımlarla aşağı kaydır */
void scrollToVisible(WebElement el){
	int sc=0
	JavascriptExecutor jse = (JavascriptExecutor) DriverFactory.getWebDriver()
	while(sc<3000 && el!=null && !el.isDisplayed()){
		jse.executeScript("window.scrollBy(0, 200)")
		WebUI.delay(0.25)
		sc += 200
	}
}

/** hızlı yaz – olmazsa JS fallback */
void clearAndType(TestObject to, String text, int t=10){
	WebUI.waitForElementVisible(to,t,FailureHandling.OPTIONAL)
	WebElement e = WebUiCommonHelper.findWebElement(to,t)
	try{
		e.clear(); e.sendKeys(text); return
	}catch(_){}
	try{
		JavascriptExecutor jse = (JavascriptExecutor) DriverFactory.getWebDriver()
		jse.executeScript("arguments[0].value=''; arguments[0].dispatchEvent(new Event('input',{bubbles:true}))", e)
		jse.executeScript("arguments[0].value=arguments[1]; arguments[0].dispatchEvent(new Event('input',{bubbles:true}))", e, text)
	}catch(_){
		WebUI.setText(to,text)
	}
}

/************** Oturum **************/
boolean isBrowserOpen(){ try{ DriverFactory.getWebDriver(); return true }catch(Throwable t){ return false } }

void ensureSession(){
	if(isBrowserOpen()) return
	WebUI.openBrowser('')
	WebUI.maximizeWindow()
	WebUI.navigateToUrl('https://platform.catchprobe.org/')

	WebUI.waitForElementVisible(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/a_PLATFORM LOGIN'), 30)
	WebUI.click(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/a_PLATFORM LOGIN'))

	WebUI.waitForElementVisible(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/input_Email Address_email'), 30)
	WebUI.setText(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/input_Email Address_email'), 'katalon.test@catchprobe.com')
	WebUI.setEncryptedText(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/input_Password_password'), 'RigbBhfdqOBDK95asqKeHw==')
	WebUI.click(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/button_Sign in'))

	WebUI.delay(3)
	String otp = (100000 + new Random().nextInt(900000)).toString()
	WebUI.setText(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/input_OTP Digit_vi_1_2_3_4_5'), otp)
	WebUI.click(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/button_Verify'))
	WebUI.delay(2)

	// Threat menüsü göründü mü?
	WebUI.waitForElementVisible(X("//span[text()='Threat']"), 10, FailureHandling.OPTIONAL)
}

/************** TEST: Malwares **************/
ensureSession()

// Threatway → Malwares
WebUI.navigateToUrl('https://platform.catchprobe.org/threatway')
WebUI.waitForPageLoad(30)
try { CustomKeywords.'com.catchprobe.utils.TableUtils.checkForUnexpectedToasts'() } catch(_){}

TestObject malwaresLink = findTestObject('Object Repository/Malwares/MalwaresLİnk')
WebElement linkEl = WebUiCommonHelper.findWebElement(malwaresLink, 15)
scrollToVisible(linkEl)
WebUI.click(malwaresLink)
WebUI.waitForPageLoad(30)
try { CustomKeywords.'com.catchprobe.utils.TableUtils.checkForUnexpectedToasts'() } catch(_){}

// Pagination’a in ve 2. sayfaya geç
TestObject paginationObject = findTestObject('Object Repository/Malwares/Pagination')
WebElement paginationEl = WebUiCommonHelper.findWebElement(paginationObject, 15)
WebUI.waitForElementVisible(paginationObject, 10)
scrollToVisible(paginationEl)
((JavascriptExecutor)DriverFactory.getWebDriver()).executeScript("window.scrollTo(0, document.body.scrollHeight)")
WebUI.delay(0.8)
WebUI.waitForElementClickable(paginationObject, 10)
WebUI.click(paginationObject)
WebUI.delay(1)

// Arama: Downdelph
TestObject inputObject = findTestObject('Object Repository/Malwares/İnput')
WebUI.waitForElementVisible(inputObject, 10)
clearAndType(inputObject, 'Downdelph')
WebUI.delay(0.5)

TestObject searchButton = findTestObject('Object Repository/Malwares/Searchbutton')
WebUI.waitForElementClickable(searchButton, 10)
WebUI.click(searchButton)
WebUI.delay(2)

// İlk sonucu doğrula
TestObject firstResult = findTestObject('Object Repository/Malwares/firstbutton')
WebUI.waitForElementVisible(firstResult, 10)
String firstTitle = WebUI.getText(firstResult)
assert firstTitle?.contains('Downdelph')

// İlk sonuca tıkla
WebUI.waitForElementClickable(firstResult, 10)
WebUI.click(firstResult)

// ■ Description doğrulama
TestObject descObject = findTestObject('Object Repository/Malwares/DescriptionBlock')
WebElement descEl = WebUiCommonHelper.findWebElement(descObject, 15)
String descriptionText = descEl.getText()

assert descriptionText.contains("Downdelph is a lightweight downloader developed in the Delphi programming language")
assert descriptionText.contains("Downdelph is a first-stage component deployed only in very rare cases")
assert descriptionText.contains("Distinguishing characteristics")
assert descriptionText.contains("infecting the Master Boot Record (MBR)")
assert descriptionText.contains("intelmeserver[.]com")

// ■ Timeline görseli
TestObject imageObject = findTestObject('Object Repository/Malwares/TimelineImage')
WebUI.scrollToElement(imageObject, 5)
WebUI.waitForElementVisible(imageObject, 10)
assert WebUI.verifyElementVisible(imageObject)

// ■ Signatures
WebUI.waitForElementClickable(findTestObject('Object Repository/Malwares/Signatures'), 15)
WebUI.click(findTestObject('Object Repository/Malwares/Signatures'))
boolean isCsvClickablesig = WebUI.waitForElementClickable(findTestObject('Object Repository/Malwares/CSV button'), 10, FailureHandling.OPTIONAL)
if(!isCsvClickablesig){
	WebUI.takeScreenshot()
	WebUI.verifyElementClickable(findTestObject('Object Repository/Malwares/CSV button')) // fail ettirir
}

// ■ Files
WebUI.waitForElementClickable(findTestObject('Object Repository/Malwares/Files'), 15)
WebUI.click(findTestObject('Object Repository/Malwares/Files'))
boolean isCsvClickable = WebUI.waitForElementClickable(findTestObject('Object Repository/Malwares/CSV button'), 10, FailureHandling.OPTIONAL)
if(!isCsvClickable){
	WebUI.takeScreenshot()
	WebUI.verifyElementClickable(findTestObject('Object Repository/Malwares/CSV button')) // fail ettirir
}

// ■ Kapat
WebUI.click(findTestObject('Object Repository/Malwares/Mitre Close'))

WebUI.comment('✅ Malwares senaryosu başarıyla tamamlandı.')
