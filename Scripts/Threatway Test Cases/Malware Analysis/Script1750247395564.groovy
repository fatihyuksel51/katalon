import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint
import com.kms.katalon.core.util.KeywordUtil

import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase
import static com.kms.katalon.core.testdata.TestDataFactory.findTestData
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject
import static com.kms.katalon.core.testobject.ObjectRepository.findWindowsObject
import com.kms.katalon.core.checkpoint.Checkpoint as Checkpoint
import com.kms.katalon.core.cucumber.keyword.CucumberBuiltinKeywords as CucumberKW
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.model.FailureHandling as FailureHandling
import com.kms.katalon.core.testcase.TestCase as TestCase
import com.kms.katalon.core.testdata.TestData as TestData
import com.kms.katalon.core.testng.keyword.TestNGBuiltinKeywords as TestNGKW
import com.kms.katalon.core.testobject.TestObject as TestObject
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import com.kms.katalon.core.windows.keyword.WindowsBuiltinKeywords as Windows
import internal.GlobalVariable
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import org.openqa.selenium.WebElement
import com.kms.katalon.core.webui.driver.DriverFactory
import com.kms.katalon.core.webui.common.WebUiCommonHelper
import org.openqa.selenium.JavascriptExecutor
import org.openqa.selenium.Keys
import org.openqa.selenium.WebElement as Keys
import com.kms.katalon.core.testobject.ConditionType


// ‚úÖ Fonksiyon: Scroll edip g√∂r√ºn√ºr hale getir
def scrollToVisible(WebElement element, JavascriptExecutor js) {
	int currentScroll = 0
	boolean isVisible = false
	while (!isVisible && currentScroll < 3000) {
		js.executeScript("window.scrollBy(0, 200)")
		WebUI.delay(0.5)
		isVisible = element.isDisplayed()
		currentScroll += 200
	}
	return isVisible
}
/*/
WebUI.openBrowser('')

WebUI.navigateToUrl('https://platform.catchprobe.org/')

WebUI.maximizeWindow()

// Login i≈ülemleri
WebUI.waitForElementVisible(findTestObject('Object Repository/otp/Page_/a_PLATFORM LOGIN'), 30)

WebUI.click(findTestObject('Object Repository/otp/Page_/a_PLATFORM LOGIN'))

WebUI.waitForElementVisible(findTestObject('Object Repository/otp/Page_/input_Email Address_email'), 30)

WebUI.setText(findTestObject('Object Repository/otp/Page_/input_Email Address_email'), 'fatih.yuksel@catchprobe.com')

WebUI.setEncryptedText(findTestObject('Object Repository/otp/Page_/input_Password_password'), 'RigbBhfdqOBDK95asqKeHw==')

WebUI.click(findTestObject('Object Repository/otp/Page_/button_Sign in'))

WebUI.delay(6)

// OTP i≈ülemi
def randomOtp = (100000 + new Random().nextInt(900000)).toString()

WebUI.setText(findTestObject('Object Repository/otp/Page_/input_OTP Digit_vi_1_2_3_4_5'), randomOtp)

WebUI.click(findTestObject('Object Repository/otp/Page_/button_Verify'))

CustomKeywords.'com.catchprobe.utils.TableUtils.checkForUnexpectedToasts'()
/*/


// Threatway sekmesine git
WebUI.navigateToUrl('https://platform.catchprobe.org/threatway')
WebUI.waitForPageLoad(30)
WebUI.delay(3)

CustomKeywords.'com.catchprobe.utils.TableUtils.checkForUnexpectedToasts'()
// Malware Analysy sekmesine git
WebUI.navigateToUrl('https://platform.catchprobe.org/threatway/malware-analysis')
WebUI.waitForPageLoad(30)

//Completed textini doƒürula
WebUI.verifyElementText(findTestObject('Object Repository/Malware Analysis/Completed text'), 'COMPLETED')
// Butona tƒ±kla
WebUI.click(findTestObject('Object Repository/Malware Analysis/Create butonu'))
//File Create butonuna tƒ±kla
WebUI.click(findTestObject('Object Repository/Malware Analysis/File Create'))

WebUI.verifyElementText(findTestObject('Object Repository/Malware Analysis/Toast Message'),
	'Please select a file.')
//Cancel Butonuna Tƒ±kla
WebUI.click(findTestObject('Object Repository/Malware Analysis/Cancel buton'))
//Action butonuna tƒ±kla
WebUI.click(findTestObject('Object Repository/Malware Analysis/actionButton'))

// Sayfada severity circle geldiƒüini doƒürula
TestObject circle = findTestObject('Object Repository/Malware Analysis/Stix Circle')

// Div'in g√∂r√ºnmesini bekle (maksimum 10 saniye)
if (WebUI.waitForElementVisible(circle, 10)) {
	
	// Elementi bul
	WebElement circleelement = WebUI.findWebElement(circle, 10)
	
	// Div'in i√ßinde circle olup olmadƒ±ƒüƒ±nƒ± kontrol et
	Boolean circleExistsRisk = WebUI.executeJavaScript(
		"return arguments[0].querySelector('circle') != null;",
		Arrays.asList(circleelement)
	)
	
	// Durumu logla
	KeywordUtil.logInfo("Stix Package Circle var mƒ±? : " + circleExistsRisk)
	
	if (circleExistsRisk) {
		KeywordUtil.logInfo("Stix Package Circle Veri VAR ‚úÖ")
	} else {
		KeywordUtil.logInfo("Stix Package Circle Veri YOK üö®")
	}
	
} else {
	KeywordUtil.logInfo("Stix Package Circle elementi g√∂r√ºnmedi ‚è∞")
}

// Detay sekmesinde JSON butonunun tƒ±klanabilir olduƒüunu doƒürula
WebUI.waitForElementClickable(findTestObject('Object Repository/Malware Analysis/Export'), 10)
WebUI.comment('Detay sekmesinde JSON butonu tƒ±klanabilir durumda.')

// Behavior sayfasƒ± butonu tƒ±kla ve sayfa kontrol et
WebUI.click(findTestObject('Object Repository/Malware Analysis/Behavior'))
WebUI.verifyElementPresent(findTestObject('Object Repository/Malware Analysis/BehaviorPageHeader'), 10)

// Mitre Attack
WebUI.click(findTestObject('Object Repository/Malware Analysis/Mitre Attack'))
WebUI.verifyElementPresent(findTestObject('Object Repository/Malware Analysis/MitrePageHeader'), 10)

// Network
WebUI.click(findTestObject('Object Repository/Malware Analysis/Network'))
WebUI.verifyElementPresent(findTestObject('Object Repository/Malware Analysis/NetworkPageHeader'), 10)

// Pcap
WebUI.click(findTestObject('Object Repository/Malware Analysis/Pcacpng'))
WebUI.verifyElementPresent(findTestObject('Object Repository/Malware Analysis/PcapPageHeader'), 10)

// Signatures
WebUI.click(findTestObject('Object Repository/Malware Analysis/Signatures'))
WebUI.verifyElementPresent(findTestObject('Object Repository/Malware Analysis/SignaturesPageHeader'), 10)

// Suricata
WebUI.click(findTestObject('Object Repository/Malware Analysis/Suricata'))
WebUI.verifyElementPresent(findTestObject('Object Repository/Malware Analysis/SuricataPageHeader'), 10)

// Target
WebUI.click(findTestObject('Object Repository/Malware Analysis/Target'))
WebUI.verifyElementPresent(findTestObject('Object Repository/Malware Analysis/TargetPageHeader'), 10)

// TTPS
WebUI.click(findTestObject('Object Repository/Malware Analysis/TTPS'))
WebUI.verifyElementPresent(findTestObject('Object Repository/Malware Analysis/TTPSPageHeader'), 10)

// URL Analysis
WebUI.click(findTestObject('Object Repository/Malware Analysis/URL Analysis'))
WebUI.verifyElementPresent(findTestObject('Object Repository/Malware Analysis/URLAnalysisPageHeader'), 10)





