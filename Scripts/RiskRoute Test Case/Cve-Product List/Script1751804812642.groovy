import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject

import com.kms.katalon.core.model.FailureHandling
import com.kms.katalon.core.testobject.ConditionType
import com.kms.katalon.core.testobject.TestObject
import com.kms.katalon.core.util.KeywordUtil
import com.kms.katalon.core.webui.common.WebUiCommonHelper
import com.kms.katalon.core.webui.driver.DriverFactory
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import com.kms.katalon.core.testobject.ObjectRepository as OR
import java.text.Normalizer
import java.util.Locale
import org.openqa.selenium.By
import org.openqa.selenium.JavascriptExecutor
import org.openqa.selenium.Keys
import org.openqa.selenium.WebDriver
import org.openqa.selenium.WebElement
import org.openqa.selenium.interactions.Actions

import java.util.Random

/************** Yardımcılar **************/
boolean isBrowserOpen(){ try{ DriverFactory.getWebDriver(); return true }catch(Throwable t){ return false } }

TestObject X(String xp) {
    TestObject to = new TestObject(xp)
    to.addProperty("xpath", ConditionType.EQUALS, xp)
    return to
}

WebElement safeScrollTo(TestObject to) {
    if (to == null) {
        KeywordUtil.markFailed("❌ TestObject NULL – Repository yolunu kontrol et.")
        return null
    }
    if (!WebUI.waitForElementPresent(to, 5, FailureHandling.OPTIONAL)) {
        KeywordUtil.logInfo("ℹ️ Element not present, scroll atlandı: ${to.getObjectId()}")
        return null
    }
    WebElement el = WebUiCommonHelper.findWebElement(to, 3)
    ((JavascriptExecutor)DriverFactory.getWebDriver())
            .executeScript("arguments[0].scrollIntoView({block:'center', inline:'nearest'})", el)
    WebUI.delay(0.3)
    return el
}

boolean visibleCenter(TestObject to, int timeoutSec) {
    if (!WebUI.waitForElementVisible(to, timeoutSec, FailureHandling.OPTIONAL)) return false
    safeScrollTo(to)
    return true
}
String normUp(String s){
	if (s == null) return ""
	String t = Normalizer.normalize(s, Normalizer.Form.NFD).replaceAll("\\p{M}", "")
	t = t.replace('ı','i').replace('İ','I')
	return t.toUpperCase(Locale.ENGLISH).trim()
}

String readIfPresent(String xp, int timeoutSec = 5){
	try{
		TestObject to = new TestObject("pcell")
		to.addProperty("xpath", ConditionType.EQUALS, xp)
		WebElement el = WebUiCommonHelper.findWebElement(to, timeoutSec)
		return el?.getText()?.trim() ?: ""
	}catch(Throwable ignore){
		return ""
	}
}

void openFilters() {
    TestObject filterBtn = X("//div[normalize-space(.)='FILTER OPTIONS']")
    safeScrollTo(filterBtn)
    WebUI.waitForElementClickable(filterBtn, 10)
    WebUI.click(filterBtn)
    WebUI.delay(0.5)
}

TestObject INP(int n) {
    // görünür & aktif input
    return X("(//input)[" + n + "]")
}

void typeIntoNthInput(int n, String text) {
    TestObject inp = INP(n)
    visibleCenter(inp, 10)
    WebUI.waitForElementClickable(inp, 10)
    WebUI.click(inp)
    WebUI.sendKeys(inp, Keys.chord(Keys.CONTROL, 'a'))    
    if (text != null && text.trim().length() > 0) {
        WebUI.sendKeys(inp, text)   // kullanıcı gibi yaz
    }
}

void clickApplyAndWait() {
    TestObject applyBtn = X("//button[normalize-space(.)='APPLY AND SEARCH']")
    WebUI.waitForElementClickable(applyBtn, 10)
    WebUI.click(applyBtn)

  
}

void expectNoDataAndScroll() {
    TestObject noData = X("//div[@class='ant-empty-description' and normalize-space(text())='No data']")
    safeScrollTo(noData)
    WebUI.waitForElementVisible(noData, 3)
    WebUI.verifyElementVisible(noData)
}

void clearWithXOnce() {
    TestObject xBtn = X("//*[local-name()='svg' and contains(@class,'lucide-x')]")
    if (WebUI.waitForElementClickable(xBtn, 3, FailureHandling.OPTIONAL)) {
        WebUI.click(xBtn)
        WebUI.delay(0.3)
    } else {
        KeywordUtil.logInfo("ℹ️ Temizleme için X butonu bulunamadı (zaten temiz olabilir).")
    }
}

/************** Oturum **************/
void ensureSession(){
    if(isBrowserOpen()) return
    WebUI.openBrowser('')
    WebUI.maximizeWindow()
    WebUI.navigateToUrl('https://platform.catchprobe.org/')

    WebUI.waitForElementVisible(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/a_PLATFORM LOGIN'), 30)
    WebUI.click(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/a_PLATFORM LOGIN'))

    WebUI.waitForElementVisible(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/input_Email Address_email'), 30)
    WebUI.setText(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/input_Email Address_email'), 'katalon.test@catchprobe.com')
    WebUI.setEncryptedText(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/input_Password_password'), 'RigbBhfdqOBDK95asqKeHw==')
    WebUI.click(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/button_Sign in'))

    WebUI.delay(3)
    String otp = (100000 + new Random().nextInt(900000)).toString()
    WebUI.setText(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/input_OTP Digit_vi_1_2_3_4_5'), otp)
    WebUI.click(OR.findTestObject('Object Repository/RiskRoute Dashboard/Page_/button_Verify'))
    WebUI.delay(2)

    WebUI.waitForElementVisible(X("//span[text()='Threat']"), 10, FailureHandling.OPTIONAL)
}

/************** TEST **************/
ensureSession()

// RiskRoute → Product List
WebUI.navigateToUrl('https://platform.catchprobe.org/riskroute/product-list')
WebUI.waitForPageLoad(20)
WebUI.delay(2)

// driver/context (gerekirse)
WebDriver driver = DriverFactory.getWebDriver()
JavascriptExecutor js = (JavascriptExecutor) driver
Actions actions = new Actions(driver)

// 3–4 sn sakinleşme
WebUI.delay(2)

/*** 1) 4. satır Product + Vendor metinlerini al ***/
TestObject idText = new TestObject('prodName')
idText.addProperty("xpath", ConditionType.EQUALS,
        "//tbody[contains(@class,'ant-table-tbody')]/tr[4]/td[1]//span[contains(@class,'ant-table-cell-content')][normalize-space()]")
String ProductNameText = WebUI.getText(idText).trim()
KeywordUtil.logInfo("📋 Product: " + ProductNameText)

TestObject vendorTo = new TestObject('vendorName')
vendorTo.addProperty("xpath", ConditionType.EQUALS,
        "//tbody[contains(@class,'ant-table-tbody')]/tr[4]/td[2]//*[normalize-space()]")
String VendorNameText = WebUI.getText(vendorTo).trim().toUpperCase()
KeywordUtil.logInfo("📋 Vendor : " + VendorNameText)

// Negatif filtreler
openFilters()

// Search -> ğğğğ -> No data
typeIntoNthInput(1, "ğğğğ")
clickApplyAndWait()
expectNoDataAndScroll()
clearWithXOnce()

// Product -> ğğğ -> No data
typeIntoNthInput(2, "ğğğ")
clickApplyAndWait()
expectNoDataAndScroll()
clearWithXOnce()

// Pozitif: product + vendor
typeIntoNthInput(1, ProductNameText)
typeIntoNthInput(2, VendorNameText)
clickApplyAndWait()





WebUI.delay(3)
// 6 Go CVE Detail butonuna tıkla
TestObject goCveDetailButton = findTestObject('Object Repository/CVE/GoCveDetailButton')
WebUI.waitForElementClickable(goCveDetailButton, 10)
WebUI.click(goCveDetailButton)
WebUI.delay(3)
//

//Moretextwait için TestObject oluştur
TestObject Moretextwait = new TestObject().addProperty("xpath", ConditionType.EQUALS, "//td[contains(@class,'ant-table-cell-ellipsis')]/span")

// 10 saniyeye kadar görünür mü kontrol et
if (WebUI.waitForElementVisible(Moretextwait, 5, FailureHandling.OPTIONAL)) {
	WebUI.comment("Moretextwait butonu bulundu.")
} else {
	WebUI.comment("Moretextwait butonu bulunamadı, sayfa yenileniyor...")
	WebUI.refresh()
	WebUI.waitForPageLoad(10)
	
	if (WebUI.waitForElementVisible(Moretextwait, 5, FailureHandling.OPTIONAL)) {
		WebUI.comment("Moretextwait butonu refresh sonrası bulundu.")
	} else {
		KeywordUtil.markFailedAndStop("Moretextwait butonu bulunamadı, test sonlandırılıyor.")
	}
}


// 7. Yeni sayfada başlık değerini al
TestObject detailTitleObject = findTestObject('Object Repository/CVE/CVemore')
WebUI.waitForElementVisible(detailTitleObject, 10)
WebUI.click(detailTitleObject)
WebUI.delay(1)
TestObject MoreText = findTestObject('Object Repository/CVE/MoreText')
WebUI.waitForElementVisible(MoreText, 10)
String Descriptiontitle = WebUI.getText(MoreText)
WebUI.delay(1)

// 8. Beklenen text ile karşılaştır

assert Descriptiontitle.contains(ProductNameText)

// More sekmesini kapat
WebUI.click(findTestObject('Object Repository/Threat Actor/Threataa/Page_/Mitre Close'))
WebUI.delay(2)

WebUI.click(goCveDetailButton)
WebUI.delay(3)



// 1) text değerini al
TestObject VendorElement = new TestObject()
VendorElement.addProperty("xpath", ConditionType.EQUALS,
    "(//div[contains(concat(' ', normalize-space(@class), ' '), ' col-spam-1 ')])[3]") // not: 'spam' typo olabilir (aşağıya bak)

WebElement VendorWebElement = WebUiCommonHelper.findWebElement(VendorElement, 10)
String VendorTextRaw = VendorWebElement.getText()

// 2) Normalize et
String vendorUp = normUp(VendorTextRaw)
String expectedUp = normUp(VendorNameText)

// 3) Karşılaştır ve anlamlı mesajla assert et
KeywordUtil.logInfo("VendorTextRaw = '" + VendorTextRaw + "' | norm = '" + vendorUp + "' | expected = '" + expectedUp + "'")
assert vendorUp.contains(expectedUp) : "Beklenen '" + expectedUp + "' metni '" + vendorUp + "' içinde yok."


// 1. text değerini al
String expected = normUp(ProductNameText)  // örn: "Windows Server 2019"

/************** 4. ve 6. hücreleri sırayla oku **************/
// Not: sende class adı "col-spam-1" görünüyor; gerçekten "col-span-1" ise düzelt.
String XP4 = "(//div[contains(concat(' ', normalize-space(@class), ' '), ' col-spam-1 ')])[4]"
String XP6 = "(//div[contains(concat(' ', normalize-space(@class), ' '), ' col-spam-1 ')])[6]"

List<String> productsRaw = []
def p4 = readIfPresent(XP4, 5); if(p4) productsRaw << p4
def p6 = readIfPresent(XP6, 5); if(p6) productsRaw << p6

// Hiçbiri bulunamadıysa bilgi ver
KeywordUtil.logInfo("Product hücreleri (raw): " + productsRaw)

/************** normalize edip doğrula **************/
List<String> productsUp = productsRaw.collect { normUp(it) }
KeywordUtil.logInfo("Product hücreleri (norm): " + productsUp)

boolean anyMatch = productsUp.any { it.contains(expected) || expected.contains(it) }
assert anyMatch : "Beklenen ürün '${expected}' listede yok. Bulunanlar: ${productsUp}"